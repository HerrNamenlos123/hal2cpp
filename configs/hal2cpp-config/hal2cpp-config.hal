# This file was generated by hal2cpp. The original Stepconf file was overwritten by hal2cpp.
# If you rerun Stepconf, make sure to also rerun hal2cpp, to overwrite this file again.

loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
addf motion-command-handler servo-thread
addf motion-controller servo-thread
loadrt hal2cpp
addf hal2cpp.0 servo-thread

loadrt pid names=pid.x,pid.y,pid.z,pid.s
addf pid.x.do-pid-calcs       servo-thread
addf pid.y.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread

#*******************
#  AXIS X JOINT 0
#*******************

setp   pid.x.Pgain     [JOINT_0]P
setp   pid.x.Igain     [JOINT_0]I
setp   pid.x.Dgain     [JOINT_0]D
setp   pid.x.bias      [JOINT_0]BIAS
setp   pid.x.FF0       [JOINT_0]FF0
setp   pid.x.FF1       [JOINT_0]FF1
setp   pid.x.FF2       [JOINT_0]FF2
setp   pid.x.deadband  [JOINT_0]DEADBAND
setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT
setp   pid.x.error-previous-target true

# net x-index-enable  =>  pid.x.index-enable
net x-enable        =>  pid.x.enable
net x-pos-cmd       =>  pid.x.command
net x-pos-fb        =>  pid.x.feedback
net x-output        <=  pid.x.output

# ---PWM Generator signals/setup---

# setp   hm2_7i80.0.pwmgen.01.output-type 1
# setp   hm2_7i80.0.pwmgen.01.scale  [JOINT_0]OUTPUT_SCALE

net x-pos-cmd    joint.0.motor-pos-cmd
# net x-output                             => hm2_7i80.0.pwmgen.01.value
# net x-enable     joint.0.amp-enable-out  => hm2_7i80.0.pwmgen.01.enable
net x-output                             => hal2cpp.0.x-pwmgen-value
net x-enable     joint.0.amp-enable-out  => hal2cpp.0.x-pwmgen-enable

# ---Encoder feedback signals/setup---

# setp    hm2_7i80.0.encoder.01.counter-mode 0
# setp    hm2_7i80.0.encoder.01.filter 1
# setp    hm2_7i80.0.encoder.01.index-invert 0
# setp    hm2_7i80.0.encoder.01.index-mask 0
# setp    hm2_7i80.0.encoder.01.index-mask-invert 0
# setp    hm2_7i80.0.encoder.01.scale  [JOINT_0]ENCODER_SCALE

net x-pos-fb               <=  hal2cpp.0.x-encoder-pos
net x-vel-fb               <=  hal2cpp.0.x-encoder-vel
net x-pos-fb               =>  joint.0.motor-pos-fb
# net x-index-enable    joint.0.index-enable  <=>  hal2cpp.0.x-encoder-index-enable
net x-pos-rawcounts        <=  hal2cpp.0.x-encoder-raw

# ---setup home / limit switch signals---

net x-home-sw     =>  joint.0.home-sw-in
net x-neg-limit     =>  joint.0.neg-lim-sw-in
net x-pos-limit     =>  joint.0.pos-lim-sw-in




net virtual-estop <= iocontrol.0.user-enable-out
net virtual-estop => hal2cpp.0.in-virtual-estop

net hardware-estop <= iocontrol.0.emc-enable-in
net hardware-estop => hal2cpp.0.out-hardware-estop

# net xpos-cmd <= joint.0.motor-pos-cmd
# net xpos-cmd => hal2cpp.0.in-cmd-pos-x

net ypos-cmd <= joint.1.motor-pos-cmd
net ypos-cmd => hal2cpp.0.in-cmd-pos-y

net zpos-cmd <= joint.2.motor-pos-cmd
net zpos-cmd => hal2cpp.0.in-cmd-pos-z

# net xpos-fb <= hal2cpp.0.out-act-pos-x
# net xpos-fb => joint.0.motor-pos-fb

net ypos-fb <= hal2cpp.0.out-act-pos-y
net ypos-fb => joint.1.motor-pos-fb

net zpos-fb <= hal2cpp.0.out-act-pos-z
net zpos-fb => joint.2.motor-pos-fb

